{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\src\\\\pages\\\\MyBooks.js\";\nimport React, { useEffect, useState, useParams } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\nfunction MyBooks() {\n  var _this = this;\n\n  // Initialize books as an empty array\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookObject = _useState4[0],\n      setBookObject = _useState4[1];\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  var submitBook = function submitBook(e) {\n    e.preventDefault();\n    API.saveBook(bookObject).then(function (resp) {\n      var booksCopy = books.slice(0);\n      booksCopy.push(resp.data);\n      setBooks(booksCopy);\n    });\n  };\n\n  function deleteBook(e) {\n    var id = e.target.getAttribute(\"dataid\");\n    API.deleteBook(id).then(function (resp) {\n      loadBooks();\n    });\n  }\n\n  var handleInputChange = function handleInputChange(e) {\n    e.preventDefault();\n    setBookObject(_objectSpread({}, bookObject, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  function loadBooks() {\n    // Add code here to get all books from the database and store them using setBooks\n    API.getBooks().then(function (resp) {\n      console.log(resp);\n      setBooks(resp.data);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"My Saved Books\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    value: bookObject.title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    value: bookObject.author,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    name: \"desscription\",\n    placeholder: \"Description (Optional)\",\n    value: bookObject.description,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: submitBook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Submit Book\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Books On My List\")), books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, books.map(function (book) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/books/\" + book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      book: book,\n      onClick: deleteBook,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default MyBooks;","map":{"version":3,"sources":["C:/Users/mille/Documents/Class/Gits/Google_Books/client/src/pages/MyBooks.js"],"names":["React","useEffect","useState","useParams","Link","Col","Row","Container","API","Jumbotron","Input","TextArea","FormBtn","DeleteBtn","MyBooks","books","setBooks","title","author","synopsis","bookObject","setBookObject","loadBooks","submitBook","e","preventDefault","saveBook","then","resp","booksCopy","slice","push","data","deleteBook","id","target","getAttribute","handleInputChange","name","value","getBooks","console","log","description","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useParams} from \"react\";\r\nimport { Link,  } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\n\r\nfunction MyBooks() {\r\n    // Initialize books as an empty array\r\n      const [books, setBooks] = useState([]);\r\n      const [ bookObject, setBookObject ] = useState({title: \"\", author: \"\", synopsis: \"\"})\r\n    \r\n      useEffect(() => {\r\n        loadBooks();\r\n        \r\n      }, []);\r\n  \r\n    const submitBook = (e) => {\r\n      e.preventDefault()\r\n      API.saveBook(bookObject).then ( resp => {\r\n      const booksCopy = books.slice(0)\r\n      booksCopy.push(resp.data)\r\n      setBooks(booksCopy)\r\n    })\r\n    }\r\n  \r\n    function deleteBook(e) {\r\n      const id =e.target.getAttribute(\"dataid\")\r\n      \r\n      API.deleteBook(id).then (resp => {\r\n        loadBooks()\r\n    })\r\n    }\r\n  \r\n  const handleInputChange = (e) => {\r\n    e.preventDefault()\r\n    setBookObject({...bookObject, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n      function loadBooks() {\r\n        // Add code here to get all books from the database and store them using setBooks\r\n  \r\n        API.getBooks().then( resp => {\r\n          console.log(resp)\r\n          setBooks(resp.data)\r\n        })\r\n      }\r\n  \r\n      return (\r\n        <Container fluid>\r\n          <Row>\r\n            <Col size=\"md-6\">\r\n              <Jumbotron>\r\n                <h1>My Saved Books</h1>\r\n              </Jumbotron>\r\n              <form>\r\n                <Input name=\"title\" placeholder=\"Title (required)\" value={bookObject.title} onChange={handleInputChange} />\r\n                <Input name=\"author\" placeholder=\"Author (required)\" value={bookObject.author} onChange={handleInputChange}/>\r\n                <TextArea name=\"desscription\" placeholder=\"Description (Optional)\" value={bookObject.description} onChange={handleInputChange}/>\r\n                <FormBtn  onClick={submitBook}>Submit Book</FormBtn>\r\n              </form>\r\n            </Col>\r\n            <Col size=\"md-6 sm-12\">\r\n              <Jumbotron>\r\n                <h1>Books On My List</h1>\r\n              </Jumbotron>\r\n              {books.length ? (\r\n                <List>\r\n                  {books.map(book => (\r\n                    <ListItem key={book._id}>\r\n                      <a href={\"/books/\" + book._id}>\r\n                        <strong>\r\n                          {book.title} by {book.author}\r\n                        </strong>\r\n                      </a>\r\n                      <DeleteBtn book={book} onClick={deleteBook}/>\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              ) : (\r\n                <h3>No Results to Display</h3>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  \r\n  export default MyBooks;"]},"metadata":{},"sourceType":"module"}