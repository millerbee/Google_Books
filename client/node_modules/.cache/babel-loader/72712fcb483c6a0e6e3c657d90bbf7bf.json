{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\mille\\\\Documents\\\\Class\\\\Gits\\\\Google_Books\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useState, useParams } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport API from \"../utils/API\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { List, ListItem } from \"../components/List\";\n\nfunction MyBooks() {\n  // Initialize books as an empty array\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({\n    title: \"\",\n    author: \"\",\n    synopsis: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookObject = _useState4[0],\n      setBookObject = _useState4[1];\n\n  useEffect(function () {\n    loadBooks();\n  }, []);\n\n  var submitBook = function submitBook(e) {\n    e.preventDefault();\n    API.saveBook(bookObject).then(function (resp) {\n      var booksCopy = books.slice(0);\n      booksCopy.push(resp.data);\n      setBooks(booksCopy);\n    });\n  };\n\n  function deleteBook(e) {\n    var id = e.target.getAttribute(\"dataid\");\n    API.deleteBook(id).then(function (resp) {\n      loadBooks();\n    });\n  }\n\n  var handleInputChange = function handleInputChange(e) {\n    e.preventDefault();\n    setBookObject(_objectSpread({}, bookObject, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  function loadBooks() {\n    // Add code here to get all books from the database and store them using setBooks\n    API.getBooks().then(function (resp) {\n      console.log(resp);\n      setBooks(resp.data);\n    });\n  } //   return (\n  //     <Container fluid>\n  //       <Row>\n  //         <Col size=\"md-6\">\n  //           <Jumbotron>\n  //             <h1>My Saved Books</h1>\n  //           </Jumbotron>\n  //           <form>\n  //             <Input name=\"title\" placeholder=\"Title (required)\" value={bookObject.title} onChange={handleInputChange} />\n  //             <Input name=\"author\" placeholder=\"Author (required)\" value={bookObject.author} onChange={handleInputChange}/>\n  //             <TextArea name=\"desscription\" placeholder=\"Description (Optional)\" value={bookObject.description} onChange={handleInputChange}/>\n  //             <FormBtn  onClick={submitBook}>Submit Book</FormBtn>\n  //           </form>\n  //         </Col>\n  //         <Col size=\"md-6 sm-12\">\n  //           <Jumbotron>\n  //             <h1>Books On My List</h1>\n  //           </Jumbotron>\n  //           {books.length ? (\n  //             <List>\n  //               {books.map(book => (\n  //                 <ListItem key={book._id}>\n  //                   <a href={\"/books/\" + book._id}>\n  //                     <strong>\n  //                       {book.title} by {book.author}\n  //                     </strong>\n  //                   </a>\n  //                   <DeleteBtn book={book} onClick={deleteBook}/>\n  //                 </ListItem>\n  //               ))}\n  //             </List>\n  //           ) : (\n  //             <h3>No Results to Display</h3>\n  //           )}\n  //         </Col>\n  //       </Row>\n  //     </Container>\n  //   );\n\n}\n\nexport default MyBooks;","map":{"version":3,"sources":["C:/Users/mille/Documents/Class/Gits/Google_Books/client/src/pages/MyBooks.js"],"names":["React","useEffect","useState","useParams","Link","Col","Row","Container","API","Jumbotron","Input","TextArea","FormBtn","DeleteBtn","List","ListItem","MyBooks","books","setBooks","title","author","synopsis","bookObject","setBookObject","loadBooks","submitBook","e","preventDefault","saveBook","then","resp","booksCopy","slice","push","data","deleteBook","id","target","getAttribute","handleInputChange","name","value","getBooks","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAqD,OAArD;AACA,SAASC,IAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,oBAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;;AAIA,SAASC,OAAT,GAAmB;AACf;AADe,kBAEad,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAENe,KAFM;AAAA,MAECC,QAFD;;AAAA,mBAGyBhB,QAAQ,CAAC;AAACiB,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE,EAApB;AAAwBC,IAAAA,QAAQ,EAAE;AAAlC,GAAD,CAHjC;AAAA;AAAA,MAGLC,UAHK;AAAA,MAGOC,aAHP;;AAKbtB,EAAAA,SAAS,CAAC,YAAM;AACduB,IAAAA,SAAS;AAEV,GAHQ,EAGN,EAHM,CAAT;;AAKF,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAnB,IAAAA,GAAG,CAACoB,QAAJ,CAAaN,UAAb,EAAyBO,IAAzB,CAAgC,UAAAC,IAAI,EAAI;AACxC,UAAMC,SAAS,GAAGd,KAAK,CAACe,KAAN,CAAY,CAAZ,CAAlB;AACAD,MAAAA,SAAS,CAACE,IAAV,CAAeH,IAAI,CAACI,IAApB;AACAhB,MAAAA,QAAQ,CAACa,SAAD,CAAR;AACD,KAJC;AAKD,GAPD;;AASA,WAASI,UAAT,CAAoBT,CAApB,EAAuB;AACrB,QAAMU,EAAE,GAAEV,CAAC,CAACW,MAAF,CAASC,YAAT,CAAsB,QAAtB,CAAV;AAEA9B,IAAAA,GAAG,CAAC2B,UAAJ,CAAeC,EAAf,EAAmBP,IAAnB,CAAyB,UAAAC,IAAI,EAAI;AAC/BN,MAAAA,SAAS;AACZ,KAFC;AAGD;;AAEH,MAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAACb,CAAD,EAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,aAAa,mBAAKD,UAAL,sBAAkBI,CAAC,CAACW,MAAF,CAASG,IAA3B,EAAkCd,CAAC,CAACW,MAAF,CAASI,KAA3C,GAAb;AACD,GAHD;;AAKI,WAASjB,SAAT,GAAqB;AACnB;AAEAhB,IAAAA,GAAG,CAACkC,QAAJ,GAAeb,IAAf,CAAqB,UAAAC,IAAI,EAAI;AAC3Ba,MAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAZ,MAAAA,QAAQ,CAACY,IAAI,CAACI,IAAN,CAAR;AACD,KAHD;AAID,GAvCY,CAyCf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;;AAEH,eAAelB,OAAf","sourcesContent":["import React, { useEffect, useState, useParams} from \"react\";\r\nimport { Link,  } from \"react-router-dom\";\r\nimport { Col, Row, Container } from \"../components/Grid\";\r\nimport API from \"../utils/API\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport { List, ListItem } from \"../components/List\";\r\n\r\n\r\n\r\nfunction MyBooks() {\r\n    // Initialize books as an empty array\r\n      const [books, setBooks] = useState([]);\r\n      const [ bookObject, setBookObject ] = useState({title: \"\", author: \"\", synopsis: \"\"})\r\n    \r\n      useEffect(() => {\r\n        loadBooks();\r\n        \r\n      }, []);\r\n  \r\n    const submitBook = (e) => {\r\n      e.preventDefault()\r\n      API.saveBook(bookObject).then ( resp => {\r\n      const booksCopy = books.slice(0)\r\n      booksCopy.push(resp.data)\r\n      setBooks(booksCopy)\r\n    })\r\n    }\r\n  \r\n    function deleteBook(e) {\r\n      const id =e.target.getAttribute(\"dataid\")\r\n      \r\n      API.deleteBook(id).then (resp => {\r\n        loadBooks()\r\n    })\r\n    }\r\n  \r\n  const handleInputChange = (e) => {\r\n    e.preventDefault()\r\n    setBookObject({...bookObject, [e.target.name]: e.target.value})\r\n  }\r\n  \r\n      function loadBooks() {\r\n        // Add code here to get all books from the database and store them using setBooks\r\n  \r\n        API.getBooks().then( resp => {\r\n          console.log(resp)\r\n          setBooks(resp.data)\r\n        })\r\n      }\r\n  \r\n    //   return (\r\n    //     <Container fluid>\r\n    //       <Row>\r\n    //         <Col size=\"md-6\">\r\n    //           <Jumbotron>\r\n    //             <h1>My Saved Books</h1>\r\n    //           </Jumbotron>\r\n    //           <form>\r\n    //             <Input name=\"title\" placeholder=\"Title (required)\" value={bookObject.title} onChange={handleInputChange} />\r\n    //             <Input name=\"author\" placeholder=\"Author (required)\" value={bookObject.author} onChange={handleInputChange}/>\r\n    //             <TextArea name=\"desscription\" placeholder=\"Description (Optional)\" value={bookObject.description} onChange={handleInputChange}/>\r\n    //             <FormBtn  onClick={submitBook}>Submit Book</FormBtn>\r\n    //           </form>\r\n    //         </Col>\r\n    //         <Col size=\"md-6 sm-12\">\r\n    //           <Jumbotron>\r\n    //             <h1>Books On My List</h1>\r\n    //           </Jumbotron>\r\n    //           {books.length ? (\r\n    //             <List>\r\n    //               {books.map(book => (\r\n    //                 <ListItem key={book._id}>\r\n    //                   <a href={\"/books/\" + book._id}>\r\n    //                     <strong>\r\n    //                       {book.title} by {book.author}\r\n    //                     </strong>\r\n    //                   </a>\r\n    //                   <DeleteBtn book={book} onClick={deleteBook}/>\r\n    //                 </ListItem>\r\n    //               ))}\r\n    //             </List>\r\n    //           ) : (\r\n    //             <h3>No Results to Display</h3>\r\n    //           )}\r\n    //         </Col>\r\n    //       </Row>\r\n    //     </Container>\r\n    //   );\r\n    }\r\n  \r\n  export default MyBooks;"]},"metadata":{},"sourceType":"module"}